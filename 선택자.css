.outbox p {
    background-color: yellow;
}
.outbox>p {
    background-color: blue;
}
/*p태그로 이루어진 형제에게*/
.sibling~p {
    background-color: cadetblue;
}
/* +를 사용할 때는 바로 뒤에 있는 태그만 찾을 수 있다 */
.sibling+a {
    /*바로 뒤에 있지 않기에 찾을 수 없음*/
    background-color: aqua;
} /*적용이 안됨 !*/
.sibling+p {
    background-color: aqua;
}

.sibling~.test {
    background-color: brown;
}
.test {
    background-color: brown;
}

.input-focus:focus {
    background-color: coral;
    color: antiquewhite;
}

.input-focus:focus+p {
    color: blue;
} /*가장 마지막 class에 적용됨*/

.state>input:checked+span {
    color: gray;
}

.state>input:disabled+span {
    text-decoration: line-through 1px solid;
}

.menu-list>li:first-child {
    background-color: cornflowerblue;
}
.menu-list>li:last-child {
    background-color: aquamarine;
}

.menu-list>li:nth-child(2n) { /*2,4,6 등에 들어감*/
    color: brown;
}

/*.table-color>???
tr:nth-child(2n) {
    border-collapse: collapse;
    background-color: yellow;
}
*/
.table-color {
    border-collapse: collapse;
}
/*자손이므로 tbody 무시*/
.table-color tr:first-child{
    background-color: yellow;
}
/*자식이므로 tbody*/
.table-color>tbody>tr:last-child {
    background-color: aqua;
}

/*위의 선택자 중 하나를 이용해서 짝수색만 바꾸기*/
.table-color /*>tbody>*/ tr:nth-child(2n) {
    background-color: fuchsia;
}

.child-tag>p:first-child {
    color: blue;
}
.child-tag>h1 {
    color:brown
}

/*클래스를 지정하고 자손으로 타입찾기*/
.of-type p:first-of-type {
    color: red;
}
/*of-type*/

/*first-child와 동일한 역할*/
.of-type>p:first-of-type {
    color: bisque;
}


.box-one { 
    border: 2px solid red;
}
.box-one a {
    color: blue;
    text-decoration: none;
    padding: 10%;
}

.box-two>ul {
    list-style: none;
}

.box-two li {
    float: left;
    margin-left: 100px;
    padding: 1%;
    border-radius: 30%;
    background-color: blue;
    color: white;
}